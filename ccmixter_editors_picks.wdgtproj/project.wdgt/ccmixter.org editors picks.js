// This file was generated by Dashcode from Apple Computer, Inc.
// You may edit this file to customize your Dashboard widget.

function load()
{
	setupParts();
	podcast_load();
}

function remove()
{
	// your widget has just been removed from the layer
	// remove any preferences as needed
	// widget.setPreferenceForKey(null, createInstancePreferenceKey("your-key"));
}

function hide()
{
	// your widget has just been hidden stop any timers to
	// prevent cpu usage
}

function show()
{
	// your widget has just been shown.  restart any timers
	// and adjust your interface as needed
	
	podcast_show();
}

function showBack(event)
{
	// your widget needs to show the back

	var front = document.getElementById("front");
	var back = document.getElementById("back");

	if (window.widget)
		widget.prepareForTransition("ToBack");

	front.style.display="none";
	back.style.display="block";
	
	if (window.widget)
		setTimeout('widget.performTransition();', 0);
}

function showFront(event)
{
	// your widget needs to show the front

	var front = document.getElementById("front");
	var back = document.getElementById("back");

	if (window.widget)
		widget.prepareForTransition("ToFront");

	front.style.display="block";
	back.style.display="none";
	
	if (window.widget)
		setTimeout('widget.performTransition();', 0);
}

/*
 getLocalizedString() pulls a string out an array named localizedStrings.  Each language project directory in this widget contains a file named "localizedStrings.js", which, in turn, contains an array called localizedStrings.  This method queries the array of the file of whichever language has highest precedence, according to the International pane of System Preferences.
*/
function getLocalizedString(string)
{
	try { string = localizedStrings[string] || string; } catch (e) {}
	return string;
}

if (window.widget)
{
	widget.onremove = remove;
	widget.onhide = hide;
	widget.onshow = show;
}


function onLogoClick(event) 
{
	widget.openURL('http://wiki.creativecommons.org/CcMixterWidget');
}



function onTrackButtonClick(event) 
{
	alert(document.getElementById("track_link").innerText);
	widget.openURL(document.getElementById("track_link").innerText);
}
